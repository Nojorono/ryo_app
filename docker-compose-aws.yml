version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: ryo_postgres
    environment:
      POSTGRES_DB: ${PSQL_NAME:-mkt_ryo}
      POSTGRES_USER: ${PSQL_USER:-jagoan2025}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD:-Jag0db@2025}
    ports:
      - "127.0.0.1:5433:5432"  # Only accessible from localhost
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ryo-network
    restart: unless-stopped

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ryo_backend
    env_file:
      - .env
    environment:
      - DEBUG=False
      - ALLOWED_HOSTS=10.0.3.222,localhost,127.0.0.1,*.amazonaws.com,*.elb.amazonaws.com
    volumes:
      - ./backend/media:/app/media
      - static_volume:/app/staticfiles
      - /var/www/ryo-app/staticfiles:/app/staticfiles-host
    ports:
      - "127.0.0.1:8081:8080"  # Backend container internal port
    networks:
      - ryo-network
    depends_on:
      - db
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: ryo_frontend
    environment:
      - REACT_APP_API_URL=http://10.0.3.222:8082/api  # Point to nginx backend port
    ports:
      - "127.0.0.1:3000:80"  # Frontend container internal port
    networks:
      - ryo-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ryo_nginx
    ports:
      - "8080:8080"  # Frontend on port 8080
      - "8082:8082"  # Backend on port 8082
    volumes:
      - ./nginx/ryo-backend-aws.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /var/www/ryo-app/staticfiles:/var/www/ryo-app/staticfiles:ro
      - ./backend/media:/var/www/ryo-app/media:ro
    networks:
      - ryo-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:

networks:
  ryo-network:
    driver: bridge